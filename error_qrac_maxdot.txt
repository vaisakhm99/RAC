v1=Normalize[{0,0.909353378,-0.4160245}];
v2=Normalize[{1,0,0}];
v3=Normalize[{1,0,0}];
v4=Normalize[{1,0,0}];
v5=Normalize[{-1,0,0}];

p=0.75;
q=1-p;
r=2*p-1;

a00000=Normalize[v1+v2+v3+v4+v5]
a00101=Normalize[v1+v2-v3+v4-v5]
a01011=Normalize[v1-v2+v3-v4+v5]
a01110=Normalize[v1-v2-v3-v4-v5]
a10011=Normalize[-v1+v2+v3-v4-v5]
a10110=Normalize[-v1+v2-v3-v4+v5]
a11000=Normalize[-v1-v2+v3+v4-v5]
a11101=Normalize[-v1-v2-v3+v4+v5]

t=1/Sqrt[1-4*p*q*(a00000[[2]]^2+a00000[[3]]^2)];
a00000={t*a00000[[1]],t*a00000[[2]]*r^2,t*a00000[[3]]*r^2};



t=1/Sqrt[1-4*p*q*(a00101[[2]]^2+a00101[[3]]^2)];
a00101={t*a00101[[1]],t*a00101[[2]]*r^2,t*a00101[[3]]*r^2};

t=1/Sqrt[1-4*p*q*(a01011[[2]]^2+a01011[[3]]^2)];
a01011={t*a01011[[1]],t*a01011[[2]]*r^2,t*a01011[[3]]*r^2};

t=1/Sqrt[1-4*p*q*(a01110[[2]]^2+a01110[[3]]^2)];
a01110={t*a01110[[1]],t*a01110[[2]]*r^2,t*a01110[[3]]*r^2};

t=1/Sqrt[1-4*p*q*(a10011[[2]]^2+a10011[[3]]^2)];
a10011={t*a10011[[1]],t*a10011[[2]]*r^2,t*a10011[[3]]*r^2};

t=1/Sqrt[1-4*p*q*(a10110[[2]]^2+a10110[[3]]^2)];
a10110={t*a10110[[1]],t*a10110[[2]]*r^2,t*a10110[[3]]*r^2};

t=1/Sqrt[1-4*p*q*(a11000[[2]]^2+a11000[[3]]^2)];
a11000={t*a11000[[1]],t*a11000[[2]]*r^2,t*a11000[[3]]*r^2};

t=1/Sqrt[1-4*p*q*(a11101[[2]]^2+a11101[[3]]^2)];
a11101={t*a11101[[1]],t*a11101[[2]]*r^2,t*a11101[[3]]*r^2};








Print["Encoding"]
Encoded={a00000,a00101,a01011,a01110,a10011,a10110,a11000,a11101}


Print["Measurements"]
Measurement={v1,v2,v3,v4,v5}


(*Print["Probability of Measurements"];*)
pv1=N[(1/2*(1+(a00000.v1)))/8+(1/2*(1+(a00101.v1)))/8+(1/2*(1+(a01011.v1)))/8+(1/2*(1+(a01110.v1)))/8+(1/2*(1-(a10011.v1)))/8+(1/2*(1-(a10110.v1)))/8+(1/2*(1-(a11000.v1)))/8+(1/2*(1-(a11101.v1)))/8]
pv2=N[(1/2*(1+(a00000.v2)))/8+(1/2*(1+(a00101.v2)))/8+(1/2*(1-(a01011.v2)))/8+(1/2*(1-(a01110.v2)))/8+(1/2*(1+(a10011.v2)))/8+(1/2*(1+(a10110.v2)))/8+(1/2*(1-(a11000.v2)))/8+(1/2*(1-(a11101.v2)))/8]
pv3=N[(1/2*(1+(a00000.v3)))/8+(1/2*(1-(a00101.v3)))/8+(1/2*(1+(a01011.v3)))/8+(1/2*(1-(a01110.v3)))/8+(1/2*(1+(a10011.v3)))/8+(1/2*(1-(a10110.v3)))/8+(1/2*(1+(a11000.v3)))/8+(1/2*(1-(a11101.v3)))/8]
pv5=N[(1/2*(1+(a00000.v5)))/8+(1/2*(1-(a00101.v5)))/8+(1/2*(1+(a01011.v5)))/8+(1/2*(1-(a01110.v5)))/8+(1/2*(1-(a10011.v5)))/8+(1/2*(1+(a10110.v5)))/8+(1/2*(1-(a11000.v5)))/8+(1/2*(1+(a11101.v5)))/8]
pv4=N[(1/2*(1+(a00000.v4)))/8+(1/2*(1+(a00101.v4)))/8+(1/2*(1-(a01011.v4)))/8+(1/2*(1-(a01110.v4)))/8+(1/2*(1-(a10011.v4)))/8+(1/2*(1-(a10110.v4)))/8+(1/2*(1+(a11000.v4)))/8+(1/2*(1+(a11101.v4)))/8]


Print["Average Probability"]
p=N[(pv1+pv2+pv3+pv4+pv5)/5]


Print["Blue -> Encoded Strings, Red-> Up of Measurement"]
Show[SphericalPlot3D[1,{phi,0,2Pi},{theta,0,Pi},Mesh->None,PlotStyle->Directive[Yellow,Opacity[0.5]]],ListPointPlot3D[Encoded,PlotStyle->Directive[Blue,PointSize->.03]],ListPointPlot3D[Measurement,PlotStyle->Directive[Red,PointSize-> 0.02]]]

